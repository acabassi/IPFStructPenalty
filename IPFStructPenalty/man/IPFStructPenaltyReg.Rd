% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IPFStructPenaltyReg.R
\name{IPFStructPenaltyReg}
\alias{IPFStructPenaltyReg}
\title{Structured penalized regression}
\usage{
IPFStructPenaltyReg(x, y, x_test = NULL, y_test = NULL, p, foldid,
  num.nonpen = 0, method = "IPF-lasso", lambda = NULL,
  bounds = NULL, strata.surv = NULL, search.path = FALSE,
  EI.eps = 0.01, fminlower = 0, threshold = 0, N = NULL,
  min.iter = 20, seed = 1234, parallel = FALSE, verbose = TRUE,
  ...)
}
\arguments{
\item{x, y}{\code{x} is the input design matrix; \code{y} is the input response matrix}

\item{x_test, y_test}{\code{x} is the input validated design matrix; \code{y} is the input validated response matrix}

\item{p}{the number of predictors from different data source.}

\item{foldid}{an vector of values for the cross-validation.}

\item{num.nonpen}{number of predictors forced to be estimated (i.e., nonpenalization).}

\item{method}{specify the the method to optimize its penalty parameters. The penalty parameters of \code{elastic-net}, \code{IPF-lasso}, \code{sIPF-elastic-net}, \code{IPF-elastic-net}, \code{IPF-tree-lasso} and \code{clogitLasso} are optimzed by the EPSGO algorithm. The penalty parameter of \code{lasso} and \code{tree-lasso} is optimzed by cross-validation. The default method is \code{IPF-lasso}}

\item{lambda}{optional user-supplied \code{lambda} sequence; default is NULL, and \code{espsgo} chooses its own sequence except the tree-lasso methods.}

\item{bounds}{bounds for the interval-searching parameters}

\item{strata.surv}{stratification variable for the Cox survival model.}

\item{search.path}{save the visited points, default is \code{FALSE}.}

\item{EI.eps}{he convergence threshold for the expected improvement between fmin and the updated point}

\item{fminlower}{minimal value for the function Q.func, default is 0.}

\item{threshold}{threshold for estimated coefficients of the tree-lasso methods.}

\item{N}{define the number of start points depending on the dimensionality of the parameter space.}

\item{min.iter}{the minimus iterations after the initial \code{N} iterations.}

\item{seed}{random seed.}

\item{parallel}{If \code{TRUE}, use parallel foreach to fit each fold except parallelizing each lambda for the tree-lasso methods. If \code{c(TRUE,TRUE)}, use parallel foreach to fit each fold and each lambda.}

\item{verbose}{print the middle search information, default is \code{TRUE}.}
}
\value{
An object of list "\code{IPFStructPenaltyReg}" is returned:
 \item{cvm}{the mean cross-validated error}  
 \item{cvm_cv}{the mean cross-validated error if providing external dataset "\code{x_test}" and "\code{y_test}". } 
 \item{alpha}{optimized \code{alpha}}  
 \item{lambda}{optimized \code{lambda}}  
 \item{pred}{the prediction of the responses}  
 \item{ipf}{optimzed penalty factors}  
 \item{Beta}{estimate of the coefficients}  
 \item{cv}{number of nonzero coefficients}
}
\description{
Function producing results of the structured penalized regression
}
\details{
IPFStructPenalty
}
\references{
Zhao, Z. & Zucknick, M. (2019). \emph{Stuctured penalized regression for drug sensitivity prediction.} arXiv: 1905.00095.
}
